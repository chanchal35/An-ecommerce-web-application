[{"F:\\e-commerce_app\\frontend\\src\\index.js":"1","F:\\e-commerce_app\\frontend\\src\\App.js":"2","F:\\e-commerce_app\\frontend\\src\\reportWebVitals.js":"3","F:\\e-commerce_app\\frontend\\src\\Screens\\HomeScreen.js":"4","F:\\e-commerce_app\\frontend\\src\\Screens\\ProductScreen.js":"5","F:\\e-commerce_app\\frontend\\src\\data.js":"6","F:\\e-commerce_app\\frontend\\src\\screens\\HomeScreen.js":"7","F:\\e-commerce_app\\frontend\\src\\screens\\ProductScreen.js":"8","F:\\e-commerce_app\\frontend\\src\\store.js":"9","F:\\e-commerce_app\\frontend\\src\\reducers\\productReducers.js":"10","F:\\e-commerce_app\\frontend\\src\\constants\\productConstants.js":"11","F:\\e-commerce_app\\frontend\\src\\actions\\productActions.js":"12","F:\\e-commerce_app\\frontend\\src\\screens\\CartScreen.js":"13","F:\\e-commerce_app\\frontend\\src\\reducers\\cartReducers.js":"14","F:\\e-commerce_app\\frontend\\src\\constants\\cartConstants.js":"15","F:\\e-commerce_app\\frontend\\src\\actions\\cartActions.js":"16","F:\\e-commerce_app\\frontend\\src\\screens\\SigninScreen.js":"17","F:\\e-commerce_app\\frontend\\src\\reducers\\userReducers.js":"18","F:\\e-commerce_app\\frontend\\src\\constants\\userConstants.js":"19","F:\\e-commerce_app\\frontend\\src\\actions\\userActions.js":"20","F:\\e-commerce_app\\frontend\\src\\screens\\RegisterScreen.js":"21","F:\\e-commerce_app\\frontend\\src\\screens\\ProductsScreen.js":"22","F:\\e-commerce_app\\frontend\\src\\screens\\ShippingScreen.js":"23","F:\\e-commerce_app\\frontend\\src\\components\\CheckoutSteps.js":"24","F:\\e-commerce_app\\frontend\\src\\screens\\PaymentScreen.js":"25","F:\\e-commerce_app\\frontend\\src\\screens\\PlaceOrderScreen.js":"26","F:\\e-commerce_app\\frontend\\src\\reducers\\orderReducers.js":"27","F:\\e-commerce_app\\frontend\\src\\constants\\orderConstants.js":"28","F:\\e-commerce_app\\frontend\\src\\screens\\OrderScreen.js":"29","F:\\e-commerce_app\\frontend\\src\\actions\\orderActions.js":"30","F:\\e-commerce_app\\frontend\\src\\components\\PaypalButton.js":"31","F:\\e-commerce_app\\frontend\\src\\screens\\OrdersScreen.js":"32","F:\\e-commerce_app\\frontend\\src\\screens\\ProfileScreen.js":"33"},{"size":500,"mtime":1609375196679,"results":"34","hashOfConfig":"35"},{"size":4088,"mtime":1610131713674,"results":"36","hashOfConfig":"35"},{"size":362,"mtime":499162500000,"results":"37","hashOfConfig":"35"},{"size":1135,"mtime":1609379845330,"results":"38","hashOfConfig":"35"},{"size":1991,"mtime":1609357503571,"results":"39","hashOfConfig":"35"},{"size":1964,"mtime":1609357607710,"results":"40","hashOfConfig":"35"},{"size":1108,"mtime":1610068231099,"results":"41","hashOfConfig":"35"},{"size":2674,"mtime":1610128301740,"results":"42","hashOfConfig":"35"},{"size":1571,"mtime":1610069065846,"results":"43","hashOfConfig":"35"},{"size":2122,"mtime":1610067901063,"results":"44","hashOfConfig":"35"},{"size":744,"mtime":1610029208283,"results":"45","hashOfConfig":"35"},{"size":2952,"mtime":1610068128994,"results":"46","hashOfConfig":"35"},{"size":3447,"mtime":1610068332620,"results":"47","hashOfConfig":"35"},{"size":991,"mtime":1610067874000,"results":"48","hashOfConfig":"35"},{"size":210,"mtime":1610055469766,"results":"49","hashOfConfig":"35"},{"size":1256,"mtime":1610068104005,"results":"50","hashOfConfig":"35"},{"size":2228,"mtime":1610068053887,"results":"51","hashOfConfig":"35"},{"size":1467,"mtime":1610069040991,"results":"52","hashOfConfig":"35"},{"size":572,"mtime":1610068889316,"results":"53","hashOfConfig":"35"},{"size":2163,"mtime":1610071050604,"results":"54","hashOfConfig":"35"},{"size":2501,"mtime":1610054365460,"results":"55","hashOfConfig":"35"},{"size":7069,"mtime":1610068031614,"results":"56","hashOfConfig":"35"},{"size":2125,"mtime":1610054870068,"results":"57","hashOfConfig":"35"},{"size":412,"mtime":1610053921849,"results":"58","hashOfConfig":"35"},{"size":1479,"mtime":1610068005550,"results":"59","hashOfConfig":"35"},{"size":3774,"mtime":1610070399332,"results":"60","hashOfConfig":"35"},{"size":3165,"mtime":1610067881767,"results":"61","hashOfConfig":"35"},{"size":1052,"mtime":1610062449490,"results":"62","hashOfConfig":"35"},{"size":4083,"mtime":1610067853201,"results":"63","hashOfConfig":"35"},{"size":3718,"mtime":1610070343109,"results":"64","hashOfConfig":"35"},{"size":1470,"mtime":1610064544629,"results":"65","hashOfConfig":"35"},{"size":2186,"mtime":1610067991332,"results":"66","hashOfConfig":"35"},{"size":3864,"mtime":1610071210777,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"pm83ed",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"75"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"70"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"70"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"70"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"70"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"70"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"70"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"70"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"70"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"70"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"70"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"70"},"F:\\e-commerce_app\\frontend\\src\\index.js",[],["153","154"],"F:\\e-commerce_app\\frontend\\src\\App.js",[],"F:\\e-commerce_app\\frontend\\src\\reportWebVitals.js",[],["155","156"],"F:\\e-commerce_app\\frontend\\src\\Screens\\HomeScreen.js",[],"F:\\e-commerce_app\\frontend\\src\\Screens\\ProductScreen.js",["157"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport data from '../data.js';\r\n\r\n\r\nfunction ProductScreen (props) {\r\n    console.log(props.match.params.id);\r\n    const product = data.products.find(x => x._id === props.match.params.id);\r\n    return <div>\r\n        <div className=\"back-to-result\">\r\n            <Link to=\"/\">Back to result</Link>\r\n        </div>\r\n        <div>\r\n          <div className=\"details\">\r\n            <div className=\"details-image\">\r\n                <img src={product.image} alt=\"image\"></img>\r\n            </div>\r\n            <div className=\"details-info\">\r\n                <ul>\r\n                    <li>\r\n                      <h4>{product.name}</h4>  \r\n                    </li>\r\n                    <li>\r\n                     Price: <b>${product.price}</b>\r\n                    </li>\r\n                    <li>\r\n                        Description:\r\n                        <div>\r\n                            {product.description}\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n            <div className=\"details-action\">\r\n                <ul>\r\n                    <li>\r\n                        Price: {product.price}\r\n                    </li>\r\n                    <li>\r\n                        Status: {product.status}\r\n                    </li>\r\n                    <li>\r\n                        Qty: <select>\r\n                            <option>1</option>\r\n                            <option>2</option>\r\n                            <option>3</option>\r\n                            <option>4</option>\r\n                        </select>\r\n                    </li>\r\n                    <ul>\r\n                        <button className=\"button\">Add to Cart</button>\r\n                        <li>Arranged and Delivered By Florist </li>\r\n                    </ul>\r\n                </ul>\r\n\r\n            </div>\r\n        </div>\r\n       </div>\r\n     </div>\r\n}\r\nexport default ProductScreen;","F:\\e-commerce_app\\frontend\\src\\data.js",["158"],"export default {\r\n    products:[\r\n    {\r\n        _id: '1',\r\n        name: 'Colorful Roses Bouquet',\r\n        category: 'Best Sellers',\r\n        image: '/images/image8.jpg',\r\n        price: 60,\r\n    },\r\n    {\r\n        _id: '2',\r\n        name: 'Birthday Bouquet',\r\n        category: 'Best Sellers',\r\n        image: '/images/image4.jpg',\r\n        price: 40,\r\n    },\r\n    {\r\n        _id: '3',\r\n        name: 'Mix Flowers',\r\n        category: 'Featured Flowers',\r\n        image: '/images/image3.jpg',\r\n        price: 60,\r\n    },\r\n    {\r\n        _id: '4',\r\n        name: 'Birthday Roses',\r\n        category: 'Best Sellers',\r\n        image: '/images/image12.jpg',\r\n        price: 30,\r\n    },\r\n    {\r\n        _id: '5',\r\n        name: 'Orchids',\r\n        category: 'Best Sellers',\r\n        image: '/images/image5.jpg',\r\n        price: 30,\r\n    },\r\n    {\r\n        _id: '6',\r\n        name: 'Yellow Lily',\r\n        category: 'Featured Flowers',\r\n        image: '/images/image6.jpg',\r\n        price: 30,\r\n    },\r\n    {\r\n        _id: '7',\r\n        name: 'Big Bouquet',\r\n        category: 'Best Sellers',\r\n        image: '/images/image7.jpg',\r\n        price: 70,\r\n    },\r\n    {\r\n        _id: '8',\r\n        name: 'Rose Bouquet',\r\n        category: 'Best Sellers',\r\n        image: '/images/image1.jpg',\r\n        price: 50,\r\n        \r\n    },\r\n    {\r\n        _id: '9',\r\n        name: 'Roses',\r\n        category: 'Best Sellers',\r\n        image: '/images/image9.jpg',\r\n        price: 30,\r\n    },\r\n    {\r\n        _id: '10',\r\n        name: 'White Lily',\r\n        category: 'Best Sellers',\r\n        image: '/images/image10.jpg',\r\n        price: 30,\r\n    },\r\n    {\r\n        _id: '11',\r\n        name: 'White lily in Pot',\r\n        category: 'Best Sellers',\r\n        image: '/images/image11.jpg',\r\n        price: 30,\r\n    },\r\n    {\r\n        _id: '12',\r\n        name: 'Rose',\r\n        category: 'Best Sellers',\r\n        image: '/images/image2.jpg',\r\n        price: 20,\r\n        \r\n    },\r\n]\r\n}",["159","160"],"F:\\e-commerce_app\\frontend\\src\\screens\\HomeScreen.js",["161","162","163"],"import React, { useEffect, useState }  from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { listProducts } from '../actions/productActions';\r\n\r\n\r\nfunction HomeScreen (props) { \r\n  \r\n  const productList = useSelector(state => state.productList);\r\n  const {products, loading, error} = productList;\r\n  const dispatch = useDispatch();\r\n  useEffect(() =>{\r\n     dispatch(listProducts());\r\n      return () =>{\r\n\r\n      };\r\n  },[]);\r\n\r\n\r\n    return loading? <div>Loading...</div>:\r\n    error? <div>{error}</div>: \r\n    <ul className=\"products\">\r\n    {\r\n    products.map(product => \r\n      <li key={product._id}>\r\n        <div className=\"product\">\r\n        <Link to={'/product/' + product._id}>\r\n        <img className=\"product-image\" src={product.image} alt=\"product\" /></Link>\r\n        <div className=\"product-name\">\r\n          <Link to={'/product/' + product._id}>{product.name}</Link>\r\n        </div>\r\n        <div className=\"product-price\">${product.price}</div>\r\n      </div>\r\n    </li>)\r\n    }     \r\n  </ul>\r\n}\r\nexport default HomeScreen;","F:\\e-commerce_app\\frontend\\src\\screens\\ProductScreen.js",["164","165"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { detailsProduct } from '../actions/productActions.js';\r\n\r\n\r\n\r\nfunction ProductScreen (props) {\r\n    const [qty, setQty] = useState(1);\r\n    const productDetails = useSelector(state => state.productDetails);\r\n    const { product, loading, error} = productDetails;\r\n    const dispatch = useDispatch();\r\n\r\n   useEffect(() => {\r\n       dispatch(detailsProduct(props.match.params.id));\r\n       return () => {\r\n           //\r\n       };\r\n   }, [])\r\n\r\nconst handleAddToCart = () =>{\r\n    props.history.push(\"/cart/\" + props.match.params.id + \"?qty=\" + qty)\r\n}\r\n\r\n    return <div>\r\n        <div className=\"back-to-result\">\r\n            <Link to=\"/\">Back to result</Link>\r\n        </div>\r\n        {loading? <div>Loading...</div>:\r\n        error? <div>{error}</div>:\r\n    \r\n    (\r\n        <div>\r\n        <div className=\"details\">\r\n          <div className=\"details-image\">\r\n              <img src={product.image} alt=\"image\"></img>\r\n          </div>\r\n          <div className=\"details-info\">\r\n              <ul>\r\n                  <li>\r\n                    <h4>{product.name}</h4>  \r\n                  </li>\r\n                  <li>\r\n                   Price: <b>${product.price}</b>\r\n                  </li>\r\n                  <li>\r\n                      Description: \r\n                      <div>\r\n                          {product.description}\r\n                      </div>\r\n                  </li>\r\n              </ul>\r\n          </div>\r\n          <div className=\"details-action\">\r\n              <ul>\r\n                  <li>\r\n                      Price: {product.price}\r\n                  </li>\r\n                  <li>\r\n                      Status: {product.countInStock >0? \"In Stock\": \"Unavailable.\" }\r\n                  </li>\r\n                  <li>\r\n                      Qty: <select value ={qty} onChange={(e) => {setQty(e.target.value) }}>\r\n                          {[...Array(product.countInStock).keys()].map(x=>\r\n                          <option key={ x+1 } value={ x+1 }>{ x+1 }</option>\r\n\r\n                          )}\r\n                      </select>\r\n                  </li>\r\n                  <ui>\r\n                      {product.countInStock>0 && <button onClick={handleAddToCart} className=\"button\">Add To Cart</button> \r\n                      }\r\n                      \r\n                      <li>Arranged and Delivered By Florist </li>\r\n                  </ui>\r\n              </ul>\r\n\r\n          </div>\r\n      </div>\r\n     </div>\r\n    )\r\n    }\r\n        \r\n     </div>\r\n}\r\nexport default ProductScreen;","F:\\e-commerce_app\\frontend\\src\\store.js",[],"F:\\e-commerce_app\\frontend\\src\\reducers\\productReducers.js",[],"F:\\e-commerce_app\\frontend\\src\\constants\\productConstants.js",[],"F:\\e-commerce_app\\frontend\\src\\actions\\productActions.js",["166"],"import axios from \"axios\";\r\nimport { PRODUCT_DELETE_FAIL, \r\n         PRODUCT_DELETE_REQUEST, \r\n         PRODUCT_DELETE_SUCCESS, \r\n         PRODUCT_LIST_FAIL,\r\n         PRODUCT_LIST_REQUEST,\r\n         PRODUCT_LIST_SUCCESS, \r\n         PRODUCT_SAVE_FAIL, \r\n         PRODUCT_SAVE_REQUEST, \r\n         PRODUCT_SAVE_SUCCESS } from \"../constants/productConstants\";\r\nimport { PRODUCT_DETAILS_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS } from \"../constants/productConstants\";\r\nimport { productSaveReducer } from \"../reducers/productReducers\";\r\n\r\n\r\nconst listProducts = (\r\n  category = '',\r\n  searchKeyword = '',\r\n  sortOrder = ''\r\n) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_REQUEST });\r\n    const { data } = await axios.get(\r\n      '/api/products?category=' +\r\n        category +\r\n        '&searchKeyword=' +\r\n        searchKeyword +\r\n        '&sortOrder=' +\r\n        sortOrder\r\n    );\r\n    dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: PRODUCT_LIST_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nconst saveProduct = (product) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_SAVE_REQUEST, payload: product });\r\n    const {\r\n      userSignin: { userInfo },\r\n    } = getState();\r\n    if (!product._id) {\r\n      const { data } = await axios.post('/api/products', product, {\r\n        headers: {\r\n          Authorization: 'Bearer ' + userInfo.token,\r\n        },\r\n      });\r\n      dispatch({ type: PRODUCT_SAVE_SUCCESS, payload: data });\r\n    } else {\r\n      const { data } = await axios.put(\r\n        '/api/products/' + product._id,\r\n        product,\r\n        {\r\n          headers: {\r\n            Authorization: 'Bearer ' + userInfo.token,\r\n          },\r\n        }\r\n      );\r\n      dispatch({ type: PRODUCT_SAVE_SUCCESS, payload: data });\r\n    }\r\n  } catch (error) {\r\n    dispatch({ type: PRODUCT_SAVE_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nconst detailsProduct = (productId) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST, payload: productId });\r\n    const { data } = await axios.get('/api/products/' + productId);\r\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\r\n  } catch (error) {\r\n    dispatch({ type: PRODUCT_DETAILS_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nconst deleteProduct = (productId) => async (dispatch, getState) => {\r\n  try {\r\n    const {\r\n      userSignin: { userInfo },\r\n    } = getState();\r\n    dispatch({ type: PRODUCT_DELETE_REQUEST, payload: productId });\r\n    const { data } = await axios.delete('/api/products/' + productId, {\r\n      headers: {\r\n        Authorization: 'Bearer ' + userInfo.token,\r\n      },\r\n    });\r\n    dispatch({ type: PRODUCT_DELETE_SUCCESS, payload: data, success: true });\r\n  } catch (error) {\r\n    dispatch({ type: PRODUCT_DELETE_FAIL, payload: error.message });\r\n  }\r\n};\r\n\r\nexport { listProducts, detailsProduct, saveProduct, deleteProduct }","F:\\e-commerce_app\\frontend\\src\\screens\\CartScreen.js",["167"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addToCart, removeFromCart } from '../actions/cartActions';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction CartScreen(props){\r\n\r\n  const cart = useSelector(state => state.cart);\r\n  \r\n  const {cartItems} = cart;\r\n  const productId = props.match.params.id;\r\n  const qty = props.location.search? Number(props.location.search.split(\"=\")[1]):1;\r\n  const dispatch = useDispatch(); \r\n  const removeFromCartHandler = (productId) => {\r\n     dispatch (removeFromCart(productId));\r\n  }\r\n\r\n  useEffect(() => {\r\n      if(productId){\r\n          dispatch(addToCart(productId, qty));\r\n      }\r\n\r\n  }, []);\r\n  const checkoutHandler = () =>{\r\n      props.history.push(\"/signin?redirect=shipping\");\r\n  }\r\n\r\n    return <div className=\"cart\">\r\n        <div className=\"cart-list\">\r\n            <ul className=\"cart-list-container\">\r\n                <li>\r\n                    <h3>\r\n                        Shopping Cart\r\n                    </h3>\r\n                    <div>\r\n                        Price\r\n                    </div>\r\n                </li>\r\n                {\r\n                    cartItems.length ===0?\r\n                    <div>\r\n                        Cart is empty\r\n                    </div>\r\n                    :\r\n                    cartItems.map( item => \r\n                        <li>\r\n                            <div className=\"cart-image\">\r\n                                <img src={item.image} alt= \"product\" />\r\n                            </div>\r\n                            <div className=\"cart-name\">\r\n                                <div>\r\n                                    <Link to={\"/product/\" + item.product }>\r\n                                      {item.name}\r\n                                    </Link>\r\n                                </div>\r\n                                <div>\r\n                                    Qty:\r\n                                    <select value={item.qty} onChange={(e) => dispatch(addToCart(item.product, e.target.value))}>\r\n                                        <option value=\"1\">1</option>\r\n                                        <option value=\"2\">2</option>\r\n                                        <option value=\"3\">3</option>\r\n                                    </select>\r\n                                    <button type=\"button\" className=\"button-delete\" onClick={() => removeFromCartHandler(item.product)}>\r\n                                        Delete\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"cart-price\">\r\n                                ${item.price}\r\n                            </div>\r\n                        \r\n                        </li>\r\n                    )\r\n                        \r\n                }\r\n            </ul>\r\n\r\n        </div>\r\n        <div className=\"cart-action\">\r\n            <h3>\r\n                SubTotal ( { cartItems.reduce((a,c) => a + c.qty, 0)} items)\r\n           : \r\n               $ {cartItems.reduce((a, c) => a + c.price * c.qty , 0)}\r\n\r\n            </h3>\r\n            <button onClick={checkoutHandler} className=\"button primary full-width\" disabled={cartItems.length === 0}>\r\n                Proceed to Checkout\r\n            </button>\r\n        </div>\r\n\r\n    </div>\r\n}\r\n\r\nexport default CartScreen;","F:\\e-commerce_app\\frontend\\src\\reducers\\cartReducers.js",[],"F:\\e-commerce_app\\frontend\\src\\constants\\cartConstants.js",[],"F:\\e-commerce_app\\frontend\\src\\actions\\cartActions.js",[],"F:\\e-commerce_app\\frontend\\src\\screens\\SigninScreen.js",["168","169"],"import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector, useStore } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { signin } from '../actions/userActions.js';\r\n\r\nfunction SigninScreen (props) {\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const userSignin = useSelector(state=>state.userSignin);\r\n    const { loading, userInfo, error } = userSignin;\r\n    const dispatch = useDispatch();\r\n    const redirect = props.location.search ? props.location.search.split(\"=\")[1] : '/';\r\n   useEffect(() => {\r\n      if(userInfo){\r\n        props.history.push(redirect);\r\n      }\r\n       return () => {\r\n           //\r\n       };\r\n   }, [userInfo]);\r\n\r\n   const submitHandler = (e) =>{\r\n       e.preventDefault();\r\n       dispatch(signin(email, password));\r\n   }\r\n\r\n\r\n   return <div className=\"form\">\r\n       <form onSubmit={submitHandler} >\r\n           <ul className=\"form-container\">\r\n               <li>\r\n                   <h2>Sign-In</h2>\r\n               </li>\r\n               <li>\r\n                   {loading && <div>Loading...</div>}\r\n                   {error && <div>{error}</div>}\r\n               </li>\r\n              <li>\r\n                  <label htmlFor=\"email\">\r\n                      Email\r\n                  </label>\r\n                  <input type=\"email\" name=\"email\" id=\"email\" onChange={(e) => setEmail(e.target.value)}>\r\n                  </input>\r\n              </li>\r\n              <li>\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <input type=\"password\" name=\"password\" id=\"password\" onChange={(e) => setPassword(e.target.value)}>\r\n                  </input>\r\n              </li>\r\n              <li><button type=\"submit\" className=\"button primary\">signin</button>\r\n              </li>\r\n              \r\n              <li>\r\n                  New to Art of Bloom?\r\n              </li>\r\n              <li>\r\n              <Link to={redirect === \"/\" ? \"register\" : \"register?redirect=\" + redirect} className=\"button secondary text-center\" >Create Art of Bloom account</Link>\r\n              </li>\r\n           </ul>\r\n       </form>\r\n   </div>\r\n}\r\nexport default SigninScreen;\r\n","F:\\e-commerce_app\\frontend\\src\\reducers\\userReducers.js",[],"F:\\e-commerce_app\\frontend\\src\\constants\\userConstants.js",[],["170","171"],"F:\\e-commerce_app\\frontend\\src\\actions\\userActions.js",[],"F:\\e-commerce_app\\frontend\\src\\screens\\RegisterScreen.js",["172","173"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { register } from '../actions/userActions.js';\r\n\r\nfunction RegisterScreen(props) {\r\n\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [rePassword, setRePassword] = useState('');\r\n  const userRegister = useSelector(state => state.userRegister);\r\n  const { loading, userInfo, error } = userRegister;\r\n  const dispatch = useDispatch();\r\n\r\n  const redirect = props.location.search ? props.location.search.split(\"=\")[1] : '/';\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      props.history.push(redirect);\r\n    }\r\n    return () => {\r\n      //\r\n    };\r\n  }, [userInfo]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(register(name, email, password));\r\n  }\r\n  return <div className=\"form\">\r\n    <form onSubmit={submitHandler} >\r\n      <ul className=\"form-container\">\r\n        <li>\r\n          <h2>Create Account</h2>\r\n        </li>\r\n        <li>\r\n          {loading && <div>Loading...</div>}\r\n          {error && <div>{error}</div>}\r\n        </li>\r\n        <li>\r\n          <label htmlFor=\"name\">\r\n            Name\r\n          </label>\r\n          <input type=\"name\" name=\"name\" id=\"name\" onChange={(e) => setName(e.target.value)}>\r\n          </input>\r\n        </li>\r\n        <li>\r\n          <label htmlFor=\"email\">\r\n            Email\r\n          </label>\r\n          <input type=\"email\" name=\"email\" id=\"email\" onChange={(e) => setEmail(e.target.value)}>\r\n          </input>\r\n        </li>\r\n        <li>\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input type=\"password\" id=\"password\" name=\"password\" onChange={(e) => setPassword(e.target.value)}>\r\n          </input>\r\n        </li>\r\n        <li>\r\n          <label htmlFor=\"rePassword\">Re-Enter Password</label>\r\n          <input type=\"password\" id=\"rePassword\" name=\"rePassword\" onChange={(e) => setRePassword(e.target.value)}>\r\n          </input>\r\n        </li>\r\n        <li>\r\n          <button type=\"submit\" className=\"button primary\">Register</button>\r\n        </li>\r\n        <li>\r\n          Already have an account?\r\n          <Link to={redirect === \"/\" ? \"signin\" : \"signin?redirect=\" + redirect} className=\"button secondary text-center\" >Create your amazona account</Link>\r\n\r\n        </li>\r\n\r\n      </ul>\r\n    </form>\r\n  </div>\r\n}\r\nexport default RegisterScreen;","F:\\e-commerce_app\\frontend\\src\\screens\\ProductsScreen.js",["174","175","176","177","178"],"import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport axios from 'axios';\r\nimport {saveProduct, listProducts, deleteProduct } from '../actions/productActions';\r\n\r\nfunction ProductsScreen(props) {\r\n  const [modalVisible, setModalVisible] = useState(false);\r\n  const [id, setId] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [price, setPrice] = useState('');\r\n  const [image, setImage] = useState('');\r\n  const [category, setCategory] = useState('');\r\n  const [countInStock, setCountInStock] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [uploading, setUploading] = useState(false);\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, products, error } = productList;\r\n\r\n  const productSave = useSelector((state) => state.productSave);\r\n  const {\r\n    loading: loadingSave,\r\n    success: successSave,\r\n    error: errorSave,\r\n  } = productSave;\r\n\r\n  const productDelete = useSelector((state) => state.productDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    success: successDelete,\r\n    error: errorDelete,\r\n  } = productDelete;\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (successSave) {\r\n      setModalVisible(false);\r\n    }\r\n    dispatch(listProducts());\r\n    return () => {\r\n      //\r\n    };\r\n  }, [successSave, successDelete]);\r\n\r\n  const openModal = (product) => {\r\n    setModalVisible(true);\r\n    setId(product._id);\r\n    setName(product.name);\r\n    setPrice(product.price);\r\n    setDescription(product.description);\r\n    setImage(product.image);\r\n    setCategory(product.category);\r\n    setCountInStock(product.countInStock);\r\n  };\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      saveProduct({\r\n        _id: id,\r\n        name,\r\n        price,\r\n        image,\r\n        category,\r\n        countInStock,\r\n        description,\r\n      })\r\n    );\r\n  };\r\n  const deleteHandler = (product) => {\r\n    dispatch(deleteProduct(product._id));\r\n  };\r\n  const uploadFileHandler = (e) => {\r\n    const file = e.target.files[0];\r\n    const bodyFormData = new FormData();\r\n    bodyFormData.append('image', file);\r\n    setUploading(true);\r\n    axios\r\n      .post('/api/uploads', bodyFormData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n        },\r\n      })\r\n      .then((response) => {\r\n        setImage(response.data);\r\n        setUploading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setUploading(false);\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"content content-margined\">\r\n      <div className=\"product-header\">\r\n        <h3>Products</h3>\r\n        <button className=\"button primary\" onClick={() => openModal({})}>\r\n          Create Product\r\n        </button>\r\n      </div>\r\n      {modalVisible && (\r\n        <div className=\"forms\">\r\n          <form onSubmit={submitHandler}>\r\n            <ul className=\"forms-container\">\r\n              <li>\r\n                <h2>Create Product</h2>\r\n              </li>\r\n              <li>\r\n                {loadingSave && <div>Loading...</div>}\r\n                {errorSave && <div>{errorSave}</div>}\r\n              </li>\r\n\r\n              <li>\r\n                <label htmlFor=\"name\">Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  value={name}\r\n                  id=\"name\"\r\n                  onChange={(e) => setName(e.target.value)}\r\n                ></input>\r\n              </li>\r\n              <li>\r\n                <label htmlFor=\"price\">Price</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"price\"\r\n                  value={price}\r\n                  id=\"price\"\r\n                  onChange={(e) => setPrice(e.target.value)}\r\n                ></input>\r\n              </li>\r\n              <li>\r\n                <label htmlFor=\"image\">Image</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"image\"\r\n                  value={image}\r\n                  id=\"image\"\r\n                  onChange={(e) => setImage(e.target.value)}\r\n                ></input>\r\n                <input type=\"file\" onChange={uploadFileHandler}></input>\r\n                {uploading && <div>Uploading...</div>}\r\n              </li>\r\n    \r\n              <li>\r\n                  <label htmlFor=\"countInStock\">CountInStock</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"countInStock\"\r\n                  value={countInStock}\r\n                  id=\"countInStock\"\r\n                  onChange={(e) => setCountInStock(e.target.value)}\r\n                ></input>\r\n              </li>\r\n              <li>\r\n                <label htmlFor=\"name\">Category</label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"category\"\r\n                  value={category}\r\n                  id=\"category\"\r\n                  onChange={(e) => setCategory(e.target.value)}\r\n                ></input>\r\n              </li>\r\n              <li>\r\n                <label htmlFor=\"description\">Description</label>\r\n                <textarea\r\n                  name=\"description\"\r\n                  value={description}\r\n                  id=\"description\"\r\n                  onChange={(e) => setDescription(e.target.value)}\r\n                ></textarea>\r\n              </li>\r\n              <li>\r\n                <button type=\"submit\" className=\"button primary\">\r\n                  {id ? 'Update' : 'Create'}\r\n                </button>\r\n              </li>\r\n              <li>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => setModalVisible(false)}\r\n                  className=\"button secondary\"\r\n                >\r\n                  Back\r\n                </button>\r\n              </li>\r\n            </ul>\r\n          </form>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"product-list\">\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>Name</th>\r\n              <th>Price</th>\r\n              <th>Category</th>\r\n              <th>Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {products.map((product) => (\r\n              <tr key={product._id}>\r\n                <td>{product._id}</td>\r\n                <td>{product.name}</td>\r\n                <td>{product.price}</td>\r\n                <td>{product.category}</td>\r\n                <td>\r\n                  <button className=\"button-edit\" onClick={() => openModal(product)}>\r\n                    Edit\r\n                  </button>{' '}\r\n                  <button\r\n                    className=\"button-delete\"\r\n                    onClick={() => deleteHandler(product)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default ProductsScreen;","F:\\e-commerce_app\\frontend\\src\\screens\\ShippingScreen.js",["179","180","181"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { saveShipping } from '../actions/cartActions';\r\nimport CheckoutSteps from '../components/CheckoutSteps.js';\r\n\r\nfunction ShippingScreen(props) {\r\n\r\n  const [address, setAddress] = useState('');\r\n  const [city, setCity] = useState('');\r\n  const [postalCode, setPostalCode] = useState('');\r\n  const [country, setCountry] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(saveShipping({ address, city, postalCode, country }));\r\n    props.history.push('payment');\r\n  }\r\n  return <div>\r\n    <CheckoutSteps step1 step2 ></CheckoutSteps>\r\n    <div className=\"forms\">\r\n      <form onSubmit={submitHandler} >\r\n        <ul className=\"forms-container\">\r\n          <li>\r\n            <h2>Shipping</h2>\r\n          </li>\r\n\r\n          <li>\r\n            <label htmlFor=\"address\">\r\n              Address\r\n          </label>\r\n            <input type=\"text\" name=\"address\" id=\"address\" onChange={(e) => setAddress(e.target.value)}>\r\n            </input>\r\n          </li>\r\n          <li>\r\n            <label htmlFor=\"city\">\r\n              City\r\n          </label>\r\n            <input type=\"text\" name=\"city\" id=\"city\" onChange={(e) => setCity(e.target.value)}>\r\n            </input>\r\n          </li>\r\n          <li>\r\n            <label htmlFor=\"postalCode\">\r\n              Postal Code\r\n          </label>\r\n            <input type=\"text\" name=\"postalCode\" id=\"postalCode\" onChange={(e) => setPostalCode(e.target.value)}>\r\n            </input>\r\n          </li>\r\n          <li>\r\n            <label htmlFor=\"country\">\r\n              Country\r\n          </label>\r\n            <input type=\"text\" name=\"country\" id=\"country\" onChange={(e) => setCountry(e.target.value)}>\r\n            </input>\r\n          </li>\r\n\r\n\r\n          <li>\r\n            <button type=\"submit\" className=\"button primary\">Continue</button>\r\n          </li>\r\n\r\n        </ul>\r\n      </form>\r\n    </div>\r\n  </div>\r\n\r\n}\r\nexport default ShippingScreen;","F:\\e-commerce_app\\frontend\\src\\components\\CheckoutSteps.js",[],"F:\\e-commerce_app\\frontend\\src\\screens\\PaymentScreen.js",["182","183","184"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { savePayment } from '../actions/cartActions';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\n\r\nfunction PaymentScreen(props) {\r\n  const [paymentMethod, setPaymentMethod] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(savePayment({ paymentMethod }));\r\n    props.history.push('placeorder');\r\n  };\r\n  return (\r\n    <div>\r\n      <CheckoutSteps step1 step2 step3></CheckoutSteps>\r\n      <div className=\"forms\">\r\n        <form onSubmit={submitHandler}>\r\n          <ul className=\"forms-container\">\r\n            <li>\r\n              <h2>Payment</h2>\r\n            </li>\r\n\r\n            <li>\r\n              <div>\r\n                <input\r\n                  type=\"radio\"\r\n                  name=\"paymentMethod\"\r\n                  id=\"paymentMethod\"\r\n                  value=\"paypal\"\r\n                  onChange={(e) => setPaymentMethod(e.target.value)}\r\n                ></input>\r\n                <label for=\"paymentMethod\">Paypal</label>\r\n              </div>\r\n            </li>\r\n\r\n            <li>\r\n              <button type=\"submit\" className=\"button primary\">\r\n                Continue\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default PaymentScreen;","F:\\e-commerce_app\\frontend\\src\\screens\\PlaceOrderScreen.js",["185","186","187"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { createOrder } from '../actions/orderActions.js';\r\nimport CheckoutSteps from '../components/CheckoutSteps.js';\r\nfunction PlaceOrderScreen(props) {\r\n\r\n  const cart = useSelector(state => state.cart);\r\n  const orderCreate = useSelector(state => state.orderCreate);\r\n  const { loading, success, error, order } = orderCreate;\r\n\r\n  const { cartItems, shipping, payment } = cart;\r\n  if (!shipping.address) {\r\n    props.history.push(\"/shipping\");\r\n  } else if (!payment.paymentMethod) {\r\n    props.history.push(\"/payment\");\r\n  }\r\n  const itemsPrice = cartItems.reduce((a, c) => a + c.price * c.qty, 0);\r\n  const shippingPrice = itemsPrice > 100 ? 0 : 10;\r\n  const taxPrice = 0.15 * itemsPrice;\r\n  const totalPrice = itemsPrice + shippingPrice + taxPrice;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const placeOrderHandler = () => {\r\n    // create an order\r\n    dispatch(createOrder({\r\n      orderItems: cartItems, shipping, payment, itemsPrice, shippingPrice,\r\n      taxPrice, totalPrice\r\n    }));\r\n  }\r\n  useEffect(() => {\r\n    if (success) {\r\n      props.history.push(\"/order/\" + order._id);\r\n    }\r\n\r\n  }, [success]);\r\n\r\n  return <div>\r\n    <CheckoutSteps step1 step2 step3 step4 ></CheckoutSteps>\r\n    <div className=\"placeorder\">\r\n      <div className=\"placeorder-info\">\r\n        <div>\r\n          <h3>\r\n            Shipping\r\n          </h3>\r\n          <div>\r\n            {cart.shipping.address}, {cart.shipping.city},\r\n          {cart.shipping.postalCode}, {cart.shipping.country},\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <h3>Payment</h3>\r\n          <div>\r\n            Payment Method: {cart.payment.paymentMethod}\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <ul className=\"cart-list-container\">\r\n            <li>\r\n              <h3>\r\n                Shopping Cart\r\n          </h3>\r\n              <div>\r\n                Price\r\n          </div>\r\n            </li>\r\n            {\r\n              cartItems.length === 0 ?\r\n                <div>\r\n                  Cart is empty\r\n          </div>\r\n                :\r\n                cartItems.map(item =>\r\n                  <li>\r\n                    <div className=\"cart-image\">\r\n                      <img src={item.image} alt=\"product\" />\r\n                    </div>\r\n                    <div className=\"cart-name\">\r\n                      <div>\r\n                        <Link to={\"/product/\" + item.product}>\r\n                          {item.name}\r\n                        </Link>\r\n\r\n                      </div>\r\n                      <div>\r\n                        Qty: {item.qty}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"cart-price\">\r\n                      ${item.price}\r\n                    </div>\r\n                  </li>\r\n                )\r\n            }\r\n          </ul>\r\n        </div>\r\n\r\n      \r\n      </div>\r\n      <div className=\"placeorder-action\">\r\n        <ul>\r\n          <li>\r\n            <button className=\"button primary full-width\" onClick={placeOrderHandler} >Place Order</button>\r\n          </li>\r\n          <li>\r\n            <h3>Order Summary</h3>\r\n          </li>\r\n          <li>\r\n            <div>Items</div>\r\n            <div>${itemsPrice}</div>\r\n          </li>\r\n          <li>\r\n            <div>Shipping</div>\r\n            <div>${shippingPrice}</div>\r\n          </li>\r\n          <li>\r\n            <div>Tax</div>\r\n            <div>${taxPrice}</div>\r\n          </li>\r\n          <li>\r\n            <div>Order Total</div>\r\n            <div>${totalPrice}</div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n\r\n}\r\n\r\nexport default PlaceOrderScreen;","F:\\e-commerce_app\\frontend\\src\\reducers\\orderReducers.js",[],"F:\\e-commerce_app\\frontend\\src\\constants\\orderConstants.js",[],"F:\\e-commerce_app\\frontend\\src\\screens\\OrderScreen.js",["188","189","190"],"import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { createOrder, detailsOrder, payOrder } from '../actions/orderActions';\r\nimport PaypalButton from '../components/PaypalButton';\r\nfunction OrderScreen(props) {\r\n\r\n  const orderPay = useSelector(state => state.orderPay);\r\n  const { loading: loadingPay, success: successPay, error: errorPay } = orderPay;\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (successPay) {\r\n      props.history.push(\"/profile\");\r\n    } else {\r\n      dispatch(detailsOrder(props.match.params.id));\r\n    }\r\n    return () => {\r\n    };\r\n  }, [successPay]);\r\n\r\n  const handleSuccessPayment = (paymentResult) => {\r\n    dispatch(payOrder(order, paymentResult));\r\n  }\r\n\r\n  const orderDetails = useSelector(state => state.orderDetails);\r\n  const { loading, order, error } = orderDetails;\r\n\r\n  return loading ? <div>Loading ...</div> : error ? <div>{error}</div> :\r\n\r\n    <div>\r\n      <div className=\"placeorder\">\r\n        <div className=\"placeorder-info\">\r\n          <div>\r\n            <h3>\r\n              Shipping\r\n          </h3>\r\n            <div>\r\n              {order.shipping.address}, {order.shipping.city},\r\n          {order.shipping.postalCode}, {order.shipping.country},\r\n          </div>\r\n            <div>\r\n              {order.isDelivered ? \"Delivered at \" + order.deliveredAt : \"Not Delivered.\"}\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <h3>Payment</h3>\r\n            <div>\r\n              Payment Method: {order.payment.paymentMethod}\r\n            </div>\r\n            <div>\r\n              {order.isPaid ? \"Paid at \" + order.paidAt : \"Not Paid.\"}\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <ul className=\"cart-list-container\">\r\n              <li>\r\n                <h3>\r\n                  Shopping Cart\r\n          </h3>\r\n                <div>\r\n                  Price\r\n          </div>\r\n              </li>\r\n              {\r\n                order.orderItems.length === 0 ?\r\n                  <div>\r\n                    Cart is empty\r\n          </div>\r\n                  :\r\n                  order.orderItems.map(item =>\r\n                    <li key={item._id}>\r\n                      <div className=\"cart-image\">\r\n                        <img src={item.image} alt=\"product\" />\r\n                      </div>\r\n                      <div className=\"cart-name\">\r\n                        <div>\r\n                          <Link to={\"/product/\" + item.product}>\r\n                            {item.name}\r\n                          </Link>\r\n\r\n                        </div>\r\n                        <div>\r\n                          Qty: {item.qty}\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"cart-price\">\r\n                        ${item.price}\r\n                      </div>\r\n                    </li>\r\n                  )\r\n              }\r\n            </ul>\r\n          </div>\r\n\r\n\r\n        </div>\r\n        <div className=\"placeorder-action\">\r\n          <ul>\r\n            <li className=\"placeorder-actions-payment\">\r\n              {loadingPay && <div>Finishing Payment...</div>}\r\n              {!order.isPaid &&\r\n                <PaypalButton\r\n                  amount={order.totalPrice}\r\n                  onSuccess={handleSuccessPayment}></PaypalButton>\r\n              }\r\n            </li>\r\n            <li>\r\n              <h3>Order Summary</h3>\r\n            </li>\r\n            <li>\r\n              <div>Items</div>\r\n              <div>${order.itemsPrice}</div>\r\n            </li>\r\n            <li>\r\n              <div>Shipping</div>\r\n              <div>${order.shippingPrice}</div>\r\n            </li>\r\n            <li>\r\n              <div>Tax</div>\r\n              <div>${order.taxPrice}</div>\r\n            </li>\r\n            <li>\r\n              <div>Order Total</div>\r\n              <div>${order.totalPrice}</div>\r\n            </li>\r\n          </ul>\r\n\r\n\r\n\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n\r\n}\r\n\r\nexport default OrderScreen;","F:\\e-commerce_app\\frontend\\src\\actions\\orderActions.js",[],"F:\\e-commerce_app\\frontend\\src\\components\\PaypalButton.js",[],"F:\\e-commerce_app\\frontend\\src\\screens\\OrdersScreen.js",["191","192","193","194","195"],"import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { listOrders, deleteOrder } from '../actions/orderActions.js';\r\n\r\nfunction OrdersScreen(props) {\r\n  const orderList = useSelector(state => state.orderList);\r\n  const { loading, orders, error } = orderList;\r\n\r\n  const orderDelete = useSelector(state => state.orderDelete);\r\n  const { loading: loadingDelete, success: successDelete, error: errorDelete } = orderDelete;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(listOrders());\r\n    return () => {\r\n      //\r\n    };\r\n  }, [successDelete]);\r\n\r\n  const deleteHandler = (order) => {\r\n    dispatch(deleteOrder(order._id));\r\n  }\r\n  return loading ? <div>Loading...</div> :\r\n    <div className=\"content content-margined\">\r\n\r\n      <div className=\"order-header\">\r\n        <h3>Orders</h3>\r\n      </div>\r\n      <div className=\"order-list\">\r\n\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>USER</th>\r\n              <th>PAID</th>\r\n              <th>PAID AT</th>\r\n              <th>DELIVERED</th>\r\n              <th>DELIVERED AT</th>\r\n              <th>ACTIONS</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map(order => (<tr key={order._id}>\r\n              <td>{order._id}</td>\r\n              <td>{order.createdAt}</td>\r\n              <td>{order.totalPrice}</td>\r\n              <td>{order.user.name}</td>\r\n              <td>{order.isPaid.toString()}</td>\r\n              <td>{order.paidAt}</td>\r\n              <td>{order.isDelivered.toString()}</td>\r\n              <td>{order.deliveredAt}</td>\r\n              <td>\r\n                <Link to={\"/order/\" + order._id} className=\"button secondary\" >Details</Link>\r\n                {' '}\r\n                <button type=\"button\" onClick={() => deleteHandler(order)} className=\"button secondary\">Delete</button>\r\n              </td>\r\n            </tr>))}\r\n          </tbody>\r\n        </table>\r\n\r\n      </div>\r\n    </div>\r\n}\r\nexport default OrdersScreen;","F:\\e-commerce_app\\frontend\\src\\screens\\ProfileScreen.js",["196"],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { logout, update } from '../actions/userActions';\r\nimport { listMyOrders } from '../actions/orderActions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nfunction ProfileScreen(props) {\r\n  const [name, setName] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const userSignin = useSelector(state => state.userSignin);\r\n  const { userInfo } = userSignin;\r\n  const handleLogout = () => {\r\n    dispatch(logout());\r\n    props.history.push(\"/signin\");\r\n  }\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(update({ userId: userInfo._id, email, name, password }))\r\n  }\r\n  const userUpdate = useSelector(state => state.userUpdate);\r\n  const { loading, success, error } = userUpdate;\r\n\r\n  const myOrderList = useSelector(state => state.myOrderList);\r\n  const { loading: loadingOrders, orders, error: errorOrders } = myOrderList;\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      console.log(userInfo.name)\r\n      setEmail(userInfo.email);\r\n      setName(userInfo.name);\r\n      setPassword(userInfo.password);\r\n    }\r\n    dispatch(listMyOrders());\r\n    return () => {\r\n\r\n    };\r\n  }, [userInfo])\r\n\r\n  return <div className=\"profile\">\r\n    <div className=\"profile-info\">\r\n      <div className=\"forms\">\r\n        <form onSubmit={submitHandler} >\r\n          <ul className=\"forms-container\">\r\n            <li>\r\n              <h2>User Profile</h2>\r\n            </li>\r\n            <li>\r\n              {loading && <div>Loading...</div>}\r\n              {error && <div>{error}</div>}\r\n              {success && <div>Profile Saved Successfully.</div>}\r\n            </li>\r\n            <li>\r\n              <label htmlFor=\"name\">\r\n                Name\r\n          </label>\r\n              <input value={name} type=\"name\" name=\"name\" id=\"name\" onChange={(e) => setName(e.target.value)}>\r\n              </input>\r\n            </li>\r\n            <li>\r\n              <label htmlFor=\"email\">\r\n                Email\r\n          </label>\r\n              <input value={email} type=\"email\" name=\"email\" id=\"email\" onChange={(e) => setEmail(e.target.value)}>\r\n              </input>\r\n            </li>\r\n            <li>\r\n              <label htmlFor=\"password\">Password</label>\r\n              <input value={password} type=\"password\" id=\"password\" name=\"password\" onChange={(e) => setPassword(e.target.value)}>\r\n              </input>\r\n            </li>\r\n\r\n            <li>\r\n              <button type=\"submit\" className=\"button primary\">Update</button>\r\n            </li>\r\n            <li>\r\n              <button type=\"button\" onClick={handleLogout} className=\"button secondary full-width\">Logout</button>\r\n            </li>\r\n\r\n          </ul>\r\n        </form>\r\n      </div>\r\n    </div>\r\n    <div className=\"profile-orders content-margined\">\r\n      {\r\n        loadingOrders ? <div>Loading...</div> :\r\n          errorOrders ? <div>{errorOrders} </div> :\r\n            <table className=\"table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>ID</th>\r\n                  <th>DATE</th>\r\n                  <th>TOTAL</th>\r\n                  <th>PAID</th>\r\n                  <th>ACTIONS</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {orders.map(order => <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.createdAt}</td>\r\n                  <td>{order.totalPrice}</td>\r\n                  <td>{order.isPaid}</td>\r\n                  <td>\r\n                    <Link to={\"/order/\" + order._id}>DETAILS</Link>\r\n                  </td>\r\n                </tr>)}\r\n              </tbody>\r\n            </table>\r\n      }\r\n    </div>\r\n  </div>\r\n}\r\n\r\nexport default ProfileScreen;",{"ruleId":"197","replacedBy":"198"},{"ruleId":"199","replacedBy":"200"},{"ruleId":"197","replacedBy":"201"},{"ruleId":"199","replacedBy":"202"},{"ruleId":"203","severity":1,"message":"204","line":16,"column":17,"nodeType":"205","endLine":16,"endColumn":54},{"ruleId":"206","severity":1,"message":"207","line":1,"column":1,"nodeType":"208","endLine":90,"endColumn":2},{"ruleId":"197","replacedBy":"209"},{"ruleId":"199","replacedBy":"210"},{"ruleId":"211","severity":1,"message":"212","line":1,"column":28,"nodeType":"213","messageId":"214","endLine":1,"endColumn":36},{"ruleId":"211","severity":1,"message":"215","line":3,"column":8,"nodeType":"213","messageId":"214","endLine":3,"endColumn":13},{"ruleId":"216","severity":1,"message":"217","line":18,"column":5,"nodeType":"218","endLine":18,"endColumn":7,"suggestions":"219"},{"ruleId":"216","severity":1,"message":"220","line":19,"column":7,"nodeType":"218","endLine":19,"endColumn":9,"suggestions":"221"},{"ruleId":"203","severity":1,"message":"204","line":36,"column":15,"nodeType":"205","endLine":36,"endColumn":52},{"ruleId":"211","severity":1,"message":"222","line":12,"column":10,"nodeType":"213","messageId":"214","endLine":12,"endColumn":28},{"ruleId":"216","severity":1,"message":"223","line":23,"column":6,"nodeType":"218","endLine":23,"endColumn":8,"suggestions":"224"},{"ruleId":"211","severity":1,"message":"225","line":2,"column":36,"nodeType":"213","messageId":"214","endLine":2,"endColumn":44},{"ruleId":"216","severity":1,"message":"226","line":21,"column":7,"nodeType":"218","endLine":21,"endColumn":17,"suggestions":"227"},{"ruleId":"197","replacedBy":"228"},{"ruleId":"199","replacedBy":"229"},{"ruleId":"211","severity":1,"message":"230","line":11,"column":10,"nodeType":"213","messageId":"214","endLine":11,"endColumn":20},{"ruleId":"216","severity":1,"message":"226","line":24,"column":6,"nodeType":"218","endLine":24,"endColumn":16,"suggestions":"231"},{"ruleId":"211","severity":1,"message":"232","line":17,"column":11,"nodeType":"213","messageId":"214","endLine":17,"endColumn":18},{"ruleId":"211","severity":1,"message":"233","line":17,"column":30,"nodeType":"213","messageId":"214","endLine":17,"endColumn":35},{"ruleId":"211","severity":1,"message":"234","line":28,"column":14,"nodeType":"213","messageId":"214","endLine":28,"endColumn":27},{"ruleId":"211","severity":1,"message":"235","line":30,"column":12,"nodeType":"213","messageId":"214","endLine":30,"endColumn":23},{"ruleId":"216","severity":1,"message":"217","line":42,"column":6,"nodeType":"218","endLine":42,"endColumn":34,"suggestions":"236"},{"ruleId":"211","severity":1,"message":"237","line":1,"column":17,"nodeType":"213","messageId":"214","endLine":1,"endColumn":26},{"ruleId":"211","severity":1,"message":"238","line":2,"column":10,"nodeType":"213","messageId":"214","endLine":2,"endColumn":14},{"ruleId":"211","severity":1,"message":"239","line":3,"column":10,"nodeType":"213","messageId":"214","endLine":3,"endColumn":21},{"ruleId":"211","severity":1,"message":"237","line":1,"column":17,"nodeType":"213","messageId":"214","endLine":1,"endColumn":26},{"ruleId":"211","severity":1,"message":"238","line":2,"column":10,"nodeType":"213","messageId":"214","endLine":2,"endColumn":14},{"ruleId":"211","severity":1,"message":"239","line":3,"column":10,"nodeType":"213","messageId":"214","endLine":3,"endColumn":21},{"ruleId":"211","severity":1,"message":"232","line":10,"column":11,"nodeType":"213","messageId":"214","endLine":10,"endColumn":18},{"ruleId":"211","severity":1,"message":"233","line":10,"column":29,"nodeType":"213","messageId":"214","endLine":10,"endColumn":34},{"ruleId":"216","severity":1,"message":"240","line":37,"column":6,"nodeType":"218","endLine":37,"endColumn":15,"suggestions":"241"},{"ruleId":"211","severity":1,"message":"242","line":4,"column":10,"nodeType":"213","messageId":"214","endLine":4,"endColumn":21},{"ruleId":"211","severity":1,"message":"243","line":9,"column":60,"nodeType":"213","messageId":"214","endLine":9,"endColumn":68},{"ruleId":"216","severity":1,"message":"244","line":19,"column":6,"nodeType":"218","endLine":19,"endColumn":18,"suggestions":"245"},{"ruleId":"211","severity":1,"message":"212","line":1,"column":28,"nodeType":"213","messageId":"214","endLine":1,"endColumn":36},{"ruleId":"211","severity":1,"message":"233","line":8,"column":28,"nodeType":"213","messageId":"214","endLine":8,"endColumn":33},{"ruleId":"211","severity":1,"message":"234","line":11,"column":20,"nodeType":"213","messageId":"214","endLine":11,"endColumn":33},{"ruleId":"211","severity":1,"message":"235","line":11,"column":66,"nodeType":"213","messageId":"214","endLine":11,"endColumn":77},{"ruleId":"216","severity":1,"message":"217","line":20,"column":6,"nodeType":"218","endLine":20,"endColumn":21,"suggestions":"246"},{"ruleId":"216","severity":1,"message":"217","line":39,"column":6,"nodeType":"218","endLine":39,"endColumn":16,"suggestions":"247"},"no-native-reassign",["248"],"no-negated-in-lhs",["249"],["248"],["249"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["248"],["249"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["250"],"React Hook useEffect has missing dependencies: 'dispatch' and 'props.match.params.id'. Either include them or remove the dependency array.",["251"],"'productSaveReducer' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'productId', and 'qty'. Either include them or remove the dependency array.",["252"],"'useStore' is defined but never used.","React Hook useEffect has missing dependencies: 'props.history' and 'redirect'. Either include them or remove the dependency array.",["253"],["248"],["249"],"'rePassword' is assigned a value but never used.",["254"],"'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'loadingDelete' is assigned a value but never used.","'errorDelete' is assigned a value but never used.",["255"],"'useEffect' is defined but never used.","'Link' is defined but never used.","'useSelector' is defined but never used.","React Hook useEffect has missing dependencies: 'order._id' and 'props.history'. Either include them or remove the dependency array.",["256"],"'createOrder' is defined but never used.","'errorPay' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'props.history', and 'props.match.params.id'. Either include them or remove the dependency array.",["257"],["258"],["259"],"no-global-assign","no-unsafe-negation",{"desc":"260","fix":"261"},{"desc":"262","fix":"263"},{"desc":"264","fix":"265"},{"desc":"266","fix":"267"},{"desc":"266","fix":"268"},{"desc":"269","fix":"270"},{"desc":"271","fix":"272"},{"desc":"273","fix":"274"},{"desc":"275","fix":"276"},{"desc":"277","fix":"278"},"Update the dependencies array to be: [dispatch]",{"range":"279","text":"280"},"Update the dependencies array to be: [dispatch, props.match.params.id]",{"range":"281","text":"282"},"Update the dependencies array to be: [dispatch, productId, qty]",{"range":"283","text":"284"},"Update the dependencies array to be: [props.history, redirect, userInfo]",{"range":"285","text":"286"},{"range":"287","text":"286"},"Update the dependencies array to be: [successSave, successDelete, dispatch]",{"range":"288","text":"289"},"Update the dependencies array to be: [order._id, props.history, success]",{"range":"290","text":"291"},"Update the dependencies array to be: [dispatch, props.history, props.match.params.id, successPay]",{"range":"292","text":"293"},"Update the dependencies array to be: [dispatch, successDelete]",{"range":"294","text":"295"},"Update the dependencies array to be: [dispatch, userInfo]",{"range":"296","text":"297"},[517,519],"[dispatch]",[597,599],"[dispatch, props.match.params.id]",[700,702],"[dispatch, productId, qty]",[733,743],"[props.history, redirect, userInfo]",[804,814],[1376,1404],"[successSave, successDelete, dispatch]",[1251,1260],"[order._id, props.history, success]",[678,690],"[dispatch, props.history, props.match.params.id, successPay]",[656,671],"[dispatch, successDelete]",[1313,1323],"[dispatch, userInfo]"]